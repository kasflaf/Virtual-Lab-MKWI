import { BaseDjwtError } from "./baseDjwtError";
export declare class TokenExpiredError extends BaseDjwtError {
    expiredAt: number;
    constructor(message: string, expiredAt: number);
}
export declare class NotBeforeError extends BaseDjwtError {
    date: number;
    constructor(message: string, date: number);
}
export declare class TimespanDecodingError extends BaseDjwtError {
    time: number | string;
    constructor(message: string, date: number | string);
}
export declare class VerificationError extends BaseDjwtError {
    constructor(message: string);
}
export declare class OptionsVerificationError extends BaseDjwtError {
    incorrectValue: string | number;
    expectedValue: string | number;
    constructor(message: string, incorrectValue: string | number, expectedValue: string | number);
}
export declare class InvalidPayloadError extends BaseDjwtError {
    constructor(message: string);
}
export declare class InvalidSignOptionsError extends BaseDjwtError {
    payloadValue?: string;
    optionsValue?: string;
    constructor(message: string, payloadVal?: string, optionsVal?: string);
}
